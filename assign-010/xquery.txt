Query A
//Inverse Alphabetical order

for $titles in fn:doc ('xmlshop.xml')/Shop/Books/Book/Title/text()
order by $titles descending
return $titles

// With ID but doesnt work as well

for $book in fn:doc ('xmlshop.xml')/Shop/Books/Book
order by $book/@ID descending
return $book/Title

//Reverse order

for $book at $i in (fn:doc ('xmlshop.xml')/Shop/Books/Book)
order by $i descending
return $book/Title

Query B

let $cdTitle := fn:doc ('xmlshop.xml')/Shop/CDs/CD/Title
for $i in (5 to 14)
return $cdTitle[$i]

Query C

for $title at $i in fn:doc('xmlshop.xml')/Shop/Books/Book/Title/text()
return if ($title = "Breaking Dawn") then ($title, "Midnight Sun") else ($title)

Query D

for $price in fn:distinct-values(fn:doc ('xmlshop.xml')/Shop/*/*/Price)
return $price

Query E

let $cd := fn:doc('xmlshop.xml')/Shop/CDs/CD
return $cd

let $cd := fn:data(fn:doc('xmlshop.xml')/Shop/CDs/CD)
return $cd //returns all the text raw

Query F

let $nameBand := fn:distinct-values(fn:doc('xmlshop.xml')/Shop/CDs/CD/Band/Name)
let $nameCompany := fn:distinct-values(fn:doc('xmlshop.xml')/Shop/Companies/Company/Name)
let $surname := fn:distinct-values(fn:doc('xmlshop.xml')/Shop/Persons/Person/Surname)
let $forename := fn:distinct-values(fn:doc('xmlshop.xml')/Shop/Persons/Person/Forename)
return ($nameBand, $nameCompany, $surname, $forename)
